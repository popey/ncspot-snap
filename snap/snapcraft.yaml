name: ncspot
base: core20
adopt-info: ncspot
summary: Cross-platform ncurses Spotify client written in Rust
description: |
  ncurses Spotify client written in Rust using librespot. It is heavily 
  inspired by ncurses MPD clients, such as ncmpc. My motivation was to 
  provide a simple and resource friendly alternative to the official 
  client as well as to support platforms that currently don't have a 
  Spotify client, such as the *BSDs.

grade: stable
confinement: strict

layout:
  /usr/lib/$SNAPCRAFT_ARCH_TRIPLET/alsa-lib:
    bind: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/alsa-lib
  /usr/share/alsa:
    bind: $SNAP/usr/share/alsa

apps:
  ncspot:
    environment:
      LD_LIBRARY_PATH: "$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/pulseaudio:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/"
      LC_ALL: "C.UTF-8"
    command-chain: ["snap/command-chain/alsa-launch"]
    command: bin/launcher
    plugs:
      - network
      - network-bind
      - unity7
      - audio-playback
      - removable-media
    slots:
      - mpris

parts:
  launcher:
    plugin: dump
    source: snap/local
  alsa-mixin:
    plugin: dump
    source: https://github.com/diddlesnaps/snapcraft-alsa.git
    source-subdir: snapcraft-assets
    build-packages:
      - libasound2-dev
    stage-packages:
      - libasound2
      - libasound2-plugins
      - yad
    stage:
      # restrict to only audio-related files - you need to ensure
      # that gtk3 is staged for yad to work correctly, to prompt
      # users to connect the alsa plug or proceed with pulseaudio.
      #
      # This helps prevent symbol conflicts in situations where
      # you're using a non-default library, such as those that the
      # gnome-3-34 extension for core18 provides.
      - etc/asound.conf
      - snap/command-chain/alsa-launch
      - usr/bin/yad*
      - usr/lib/$SNAPCRAFT_ARCH_TRIPLET/alsa-lib
      - usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libasound*
      - usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libdnsfile*
      - usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libFLAC*
      - usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libjack*
      - usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libpulse*
      - usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libsamplerate*
      - usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libspeex*
      - usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libvorbis*
      - usr/lib/$SNAPCRAFT_ARCH_TRIPLET/pulseaudio
  ncspot:
    after: [alsa-mixin]
    plugin: rust
    source: https://github.com/hrkfdn/ncspot.git
    override-pull: |
      snapcraftctl pull
      last_committed_tag="$(git tag -l --sort=version:refname | tail -n 1 | tr -d 'v')"
      echo $last_committed_tag
      last_released_tag="$(snap info $SNAPCRAFT_PROJECT_NAME | awk '$1 == "latest/beta:" { print $2 }')"
      echo $last_released_tag
      # If the latest tag from the upstream project has not been released to
      # beta, build that tag instead of master.
      if [ "${last_committed_tag}" != "${last_released_tag}" ]; then
        git fetch
        git checkout "v${last_committed_tag}"
        echo "Setting version to $last_committed_tag"
        snapcraftctl set-version "$(echo $last_committed_tag)"
      else
        echo "Setting version to $(git rev-parse --short HEAD)"
        snapcraftctl set-version "$(git rev-parse --short HEAD)"
      fi
    build-packages:
      - libasound2-dev
      - libncurses-dev
      - libncursesw5-dev
      - libssl-dev
      - libdbus-1-dev
      - pkg-config
      - libpulse-dev
      - libxcb1-dev
      - libxcb-render0-dev
      - libxcb-shape0-dev
      - libxcb-xfixes0-dev
      - musl-tools
    stage-packages:
      - libpulse0
      - libncursesw5
      - libasound2
      - libdbus-1-3
      - libgcc1
      - libgcrypt20
      - libgpg-error0
      - liblz4-1
      - liblzma5
      - libssl1.1
      - libsystemd0
      - libtinfo5
      - libxcb-render0
      - libxcb-shape0
      - libxcb-xfixes0
